[{"categories":["Network"],"content":"DNSを完全に理解する","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-dns/","tags":["Network"],"title":"DNSを完全に理解する","uri":"/junior-engineers-learning-journal/network-dns/"},{"categories":["Network"],"content":" DNS CAAレコード この意味 RSIGレコード SPFレコード DNS SEC TSIG カミンスキー攻撃 SPF nslookup, digが行っていること。通信の中身 DNSアンプ攻撃 DNSリフレクタ攻撃 DNSSECは権威DNSとキャッシュDNSの間、クライアントとの間はdns over tlsとか キャッシュポイズニングとID的なやつ ポートランダマイゼーション　2.6.1 ファーミング DNSアンプ キャッシュサーバ公開しない どうやってレスをでかくする？ DNSトンネリング 権威DNSも返してくれるけどrecursion noなので、再起問い合わせしてくれない FAST FLUX Domain flux IDNA こんにちは、しぶやです。 今回はDNSを完全に理解していきます。 ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-dns/:0:0","tags":["Network"],"title":"DNSを完全に理解する","uri":"/junior-engineers-learning-journal/network-dns/"},{"categories":["Network"],"content":"TL;DR ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-dns/:1:0","tags":["Network"],"title":"DNSを完全に理解する","uri":"/junior-engineers-learning-journal/network-dns/"},{"categories":["Network"],"content":"1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-dns/:2:0","tags":["Network"],"title":"DNSを完全に理解する","uri":"/junior-engineers-learning-journal/network-dns/"},{"categories":["Network"],"content":"1.1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-dns/:2:1","tags":["Network"],"title":"DNSを完全に理解する","uri":"/junior-engineers-learning-journal/network-dns/"},{"categories":["Network"],"content":"参考 [1] ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-dns/:3:0","tags":["Network"],"title":"DNSを完全に理解する","uri":"/junior-engineers-learning-journal/network-dns/"},{"categories":["Network"],"content":"IPを完全に理解する","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-ip/","tags":["Network"],"title":"IPを完全に理解する","uri":"/junior-engineers-learning-journal/network-ip/"},{"categories":["Network"],"content":" こんにちは、しぶやです。 今回はを完全に理解していきます。 ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-ip/:0:0","tags":["Network"],"title":"IPを完全に理解する","uri":"/junior-engineers-learning-journal/network-ip/"},{"categories":["Network"],"content":"TL;DR ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-ip/:1:0","tags":["Network"],"title":"IPを完全に理解する","uri":"/junior-engineers-learning-journal/network-ip/"},{"categories":["Network"],"content":"1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-ip/:2:0","tags":["Network"],"title":"IPを完全に理解する","uri":"/junior-engineers-learning-journal/network-ip/"},{"categories":["Network"],"content":"1.1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-ip/:2:1","tags":["Network"],"title":"IPを完全に理解する","uri":"/junior-engineers-learning-journal/network-ip/"},{"categories":["Network"],"content":"参考 [1] ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-ip/:3:0","tags":["Network"],"title":"IPを完全に理解する","uri":"/junior-engineers-learning-journal/network-ip/"},{"categories":["Network"],"content":"TCPを完全に理解する","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-tcp/","tags":["Network"],"title":"TCPを完全に理解する","uri":"/junior-engineers-learning-journal/network-tcp/"},{"categories":["Network"],"content":" こんにちは、しぶやです。 今回はを完全に理解していきます。 ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-tcp/:0:0","tags":["Network"],"title":"TCPを完全に理解する","uri":"/junior-engineers-learning-journal/network-tcp/"},{"categories":["Network"],"content":"TL;DR ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-tcp/:1:0","tags":["Network"],"title":"TCPを完全に理解する","uri":"/junior-engineers-learning-journal/network-tcp/"},{"categories":["Network"],"content":"1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-tcp/:2:0","tags":["Network"],"title":"TCPを完全に理解する","uri":"/junior-engineers-learning-journal/network-tcp/"},{"categories":["Network"],"content":"1.1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-tcp/:2:1","tags":["Network"],"title":"TCPを完全に理解する","uri":"/junior-engineers-learning-journal/network-tcp/"},{"categories":["Network"],"content":"参考 [1] ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-tcp/:3:0","tags":["Network"],"title":"TCPを完全に理解する","uri":"/junior-engineers-learning-journal/network-tcp/"},{"categories":["Network"],"content":"TCPを完全に理解する","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-certificate-authority/","tags":["Network"],"title":"TCPを完全に理解する","uri":"/junior-engineers-learning-journal/security-certificate-authority/"},{"categories":["Network"],"content":" こんにちは、しぶやです。 今回はを完全に理解していきます。 ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-certificate-authority/:0:0","tags":["Network"],"title":"TCPを完全に理解する","uri":"/junior-engineers-learning-journal/security-certificate-authority/"},{"categories":["Network"],"content":"TL;DR ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-certificate-authority/:1:0","tags":["Network"],"title":"TCPを完全に理解する","uri":"/junior-engineers-learning-journal/security-certificate-authority/"},{"categories":["Network"],"content":"1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-certificate-authority/:2:0","tags":["Network"],"title":"TCPを完全に理解する","uri":"/junior-engineers-learning-journal/security-certificate-authority/"},{"categories":["Network"],"content":"1.1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-certificate-authority/:2:1","tags":["Network"],"title":"TCPを完全に理解する","uri":"/junior-engineers-learning-journal/security-certificate-authority/"},{"categories":["Network"],"content":"参考 [1] ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-certificate-authority/:3:0","tags":["Network"],"title":"TCPを完全に理解する","uri":"/junior-engineers-learning-journal/security-certificate-authority/"},{"categories":["Network"],"content":"UDPを完全に理解する","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-udp/","tags":["Network"],"title":"UDPを完全に理解する","uri":"/junior-engineers-learning-journal/network-udp/"},{"categories":["Network"],"content":" こんにちは、しぶやです。 今回はを完全に理解していきます。 ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-udp/:0:0","tags":["Network"],"title":"UDPを完全に理解する","uri":"/junior-engineers-learning-journal/network-udp/"},{"categories":["Network"],"content":"TL;DR ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-udp/:1:0","tags":["Network"],"title":"UDPを完全に理解する","uri":"/junior-engineers-learning-journal/network-udp/"},{"categories":["Network"],"content":"1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-udp/:2:0","tags":["Network"],"title":"UDPを完全に理解する","uri":"/junior-engineers-learning-journal/network-udp/"},{"categories":["Network"],"content":"1.1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-udp/:2:1","tags":["Network"],"title":"UDPを完全に理解する","uri":"/junior-engineers-learning-journal/network-udp/"},{"categories":["Network"],"content":"参考 [1] ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-udp/:3:0","tags":["Network"],"title":"UDPを完全に理解する","uri":"/junior-engineers-learning-journal/network-udp/"},{"categories":["Application"],"content":"メールを完全に理解する","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/application-mail/","tags":["Application"],"title":"メールを完全に理解する","uri":"/junior-engineers-learning-journal/application-mail/"},{"categories":["Application"],"content":" メール PGP M/MIME SMTP Auth SMTP 587 APOP POP3 IMAPS SMTP Submission OP25B IP25B メールの仕組み・構成 フィッシングについて考える mxレコードとaレコードがどう利用されているのか 中継するサーバは受信者と送信者のもののみなのか。パブリックな中継がある？ こんにちは、しぶやです。 今回はを完全に理解していきます。 ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/application-mail/:0:0","tags":["Application"],"title":"メールを完全に理解する","uri":"/junior-engineers-learning-journal/application-mail/"},{"categories":["Application"],"content":"TL;DR ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/application-mail/:1:0","tags":["Application"],"title":"メールを完全に理解する","uri":"/junior-engineers-learning-journal/application-mail/"},{"categories":["Application"],"content":"1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/application-mail/:2:0","tags":["Application"],"title":"メールを完全に理解する","uri":"/junior-engineers-learning-journal/application-mail/"},{"categories":["Application"],"content":"1.1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/application-mail/:2:1","tags":["Application"],"title":"メールを完全に理解する","uri":"/junior-engineers-learning-journal/application-mail/"},{"categories":["Application"],"content":"参考 [1] ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/application-mail/:3:0","tags":["Application"],"title":"メールを完全に理解する","uri":"/junior-engineers-learning-journal/application-mail/"},{"categories":["Security"],"content":"暗号を完全に理解する","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-cryptography/","tags":["Security"],"title":"暗号を完全に理解する","uri":"/junior-engineers-learning-journal/security-cryptography/"},{"categories":["Security"],"content":" 暗号 FIPS TLS1.3暗号スイート ハッシュ 衝突困難性 ブロック暗号 CTR TLSの役割 暗号化 改ざん防止 サーバ証明 楕円曲線はリソース低い 耐量子暗号 量子鍵配送 楕円極性 ed25519 モスカの定理 講師暗号 ショアのアルゴリズム 秘密計算 準同型暗号 秘密分散 ハイブリット しきい値秘密分散 チェックサムっぽい MD5 衝突 MAC HMAC CMAC ゼロ知識証明 CHAP こんにちは、しぶやです。 今回はを完全に理解していきます。 ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-cryptography/:0:0","tags":["Security"],"title":"暗号を完全に理解する","uri":"/junior-engineers-learning-journal/security-cryptography/"},{"categories":["Security"],"content":"TL;DR ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-cryptography/:1:0","tags":["Security"],"title":"暗号を完全に理解する","uri":"/junior-engineers-learning-journal/security-cryptography/"},{"categories":["Security"],"content":"1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-cryptography/:2:0","tags":["Security"],"title":"暗号を完全に理解する","uri":"/junior-engineers-learning-journal/security-cryptography/"},{"categories":["Security"],"content":"1.1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-cryptography/:2:1","tags":["Security"],"title":"暗号を完全に理解する","uri":"/junior-engineers-learning-journal/security-cryptography/"},{"categories":["Security"],"content":"参考 [1] ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-cryptography/:3:0","tags":["Security"],"title":"暗号を完全に理解する","uri":"/junior-engineers-learning-journal/security-cryptography/"},{"categories":["Network"],"content":"自動車IoTを完全に理解する","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/iot-automotive-security/","tags":["Network"],"title":"自動車IoTを完全に理解する","uri":"/junior-engineers-learning-journal/iot-automotive-security/"},{"categories":["Network"],"content":" 自動車 自動車の情報セキュリティへの取り組みガイド misra c misra c++ obd2 CAN 車載イーサネット SOM/IP DOIP こんにちは、しぶやです。 今回はを完全に理解していきます。 ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/iot-automotive-security/:0:0","tags":["Network"],"title":"自動車IoTを完全に理解する","uri":"/junior-engineers-learning-journal/iot-automotive-security/"},{"categories":["Network"],"content":"TL;DR ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/iot-automotive-security/:1:0","tags":["Network"],"title":"自動車IoTを完全に理解する","uri":"/junior-engineers-learning-journal/iot-automotive-security/"},{"categories":["Network"],"content":"1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/iot-automotive-security/:2:0","tags":["Network"],"title":"自動車IoTを完全に理解する","uri":"/junior-engineers-learning-journal/iot-automotive-security/"},{"categories":["Network"],"content":"1.1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/iot-automotive-security/:2:1","tags":["Network"],"title":"自動車IoTを完全に理解する","uri":"/junior-engineers-learning-journal/iot-automotive-security/"},{"categories":["Network"],"content":"参考 [1] ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/iot-automotive-security/:3:0","tags":["Network"],"title":"自動車IoTを完全に理解する","uri":"/junior-engineers-learning-journal/iot-automotive-security/"},{"categories":["脆弱性"],"content":"脆弱性を完全に理解する","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-vulnerability/","tags":["脆弱性"],"title":"脆弱性を完全に理解する","uri":"/junior-engineers-learning-journal/security-vulnerability/"},{"categories":["脆弱性"],"content":" 脆弱性 CVSS 基本評価基準 現状評価基準 脅威 CVSS-〇〇 SSVC こんにちは、しぶやです。 今回はを完全に理解していきます。 ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-vulnerability/:0:0","tags":["脆弱性"],"title":"脆弱性を完全に理解する","uri":"/junior-engineers-learning-journal/security-vulnerability/"},{"categories":["脆弱性"],"content":"TL;DR ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-vulnerability/:1:0","tags":["脆弱性"],"title":"脆弱性を完全に理解する","uri":"/junior-engineers-learning-journal/security-vulnerability/"},{"categories":["脆弱性"],"content":"1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-vulnerability/:2:0","tags":["脆弱性"],"title":"脆弱性を完全に理解する","uri":"/junior-engineers-learning-journal/security-vulnerability/"},{"categories":["脆弱性"],"content":"1.1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-vulnerability/:2:1","tags":["脆弱性"],"title":"脆弱性を完全に理解する","uri":"/junior-engineers-learning-journal/security-vulnerability/"},{"categories":["脆弱性"],"content":"参考 [1] ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-vulnerability/:3:0","tags":["脆弱性"],"title":"脆弱性を完全に理解する","uri":"/junior-engineers-learning-journal/security-vulnerability/"},{"categories":["Security"],"content":"認証/認可を完全に理解する","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-authentication-and-authorization/","tags":["Security"],"title":"認証/認可を完全に理解する","uri":"/junior-engineers-learning-journal/security-authentication-and-authorization/"},{"categories":["Security"],"content":" 認証基礎 SAML OAuth OpenID Pass The Hash Cookie認証 Kerberos認証 リバースプロキシ型認証 FIDO UAF CATP 1 CATP 2 CAPTHA ロックアウト リスクベース JWT? CHAPリプレイ攻撃、なりすまし レインボーテーブル、ソルト パスワードスプレー パスワードリスト クレデンシャルスタッフィング攻撃 pass tha hash ケルベロス認証 s/key パスキー IDaaS idパスワードはネットワークに流さない。 reflesh token SCIM OIDC samlにはないがodicにはユーザからの同意を得る手順がある SMS認証 課金 拒否 SIMスワップ バイオメトリクス認証 本人拒否率 他人受け入れ率 代替手段が必要 問題点 バイオメトリクス認証 本人拒否率 他人受け入れ率 マスターフェイス ウルフ攻撃 ekyc EKYCのライブネスチェック 犯収法 顧客の指名・住所・生年月日などの「本人特定事項」や「取引を行う目的」 ホ方式、ワ方式 ディープフェイク ハードウェアトークン JWT CSMS認証 認証局のかい総合像 ISO 42001 ジョーアカウント こんにちは、しぶやです。 今回はを完全に理解していきます。 ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-authentication-and-authorization/:0:0","tags":["Security"],"title":"認証/認可を完全に理解する","uri":"/junior-engineers-learning-journal/security-authentication-and-authorization/"},{"categories":["Security"],"content":"TL;DR ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-authentication-and-authorization/:1:0","tags":["Security"],"title":"認証/認可を完全に理解する","uri":"/junior-engineers-learning-journal/security-authentication-and-authorization/"},{"categories":["Security"],"content":"1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-authentication-and-authorization/:2:0","tags":["Security"],"title":"認証/認可を完全に理解する","uri":"/junior-engineers-learning-journal/security-authentication-and-authorization/"},{"categories":["Security"],"content":"1.1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-authentication-and-authorization/:2:1","tags":["Security"],"title":"認証/認可を完全に理解する","uri":"/junior-engineers-learning-journal/security-authentication-and-authorization/"},{"categories":["Security"],"content":"参考 [1] ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/security-authentication-and-authorization/:3:0","tags":["Security"],"title":"認証/認可を完全に理解する","uri":"/junior-engineers-learning-journal/security-authentication-and-authorization/"},{"categories":["Network"],"content":"無線LANを完全に理解する","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-wireless-lan/","tags":["Network"],"title":"無線LANを完全に理解する","uri":"/junior-engineers-learning-journal/network-wireless-lan/"},{"categories":["Network"],"content":" 無線LANセキュリティ WPA3 WPA2 Enteprise, Personal Enhanced Open EAP MD5 TLS TTLS TOPTP PEAP ジャミング攻撃 隠れ端末問題:https://xtech.nikkei.com/atcl/nxt/column/18/00247/041000003/ 他のキャリアを見つけられない そもそものCSMA/CAは wpa2とwpa3の違い wifi dpp sae iphoneのMACアドレスランダム化 OpenRoaming eduroam こんにちは、しぶやです。 今回はを完全に理解していきます。 ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-wireless-lan/:0:0","tags":["Network"],"title":"無線LANを完全に理解する","uri":"/junior-engineers-learning-journal/network-wireless-lan/"},{"categories":["Network"],"content":"TL;DR ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-wireless-lan/:1:0","tags":["Network"],"title":"無線LANを完全に理解する","uri":"/junior-engineers-learning-journal/network-wireless-lan/"},{"categories":["Network"],"content":"1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-wireless-lan/:2:0","tags":["Network"],"title":"無線LANを完全に理解する","uri":"/junior-engineers-learning-journal/network-wireless-lan/"},{"categories":["Network"],"content":"1.1　hoge ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-wireless-lan/:2:1","tags":["Network"],"title":"無線LANを完全に理解する","uri":"/junior-engineers-learning-journal/network-wireless-lan/"},{"categories":["Network"],"content":"参考 [1] ","date":"2025-04-13","objectID":"/junior-engineers-learning-journal/network-wireless-lan/:3:0","tags":["Network"],"title":"無線LANを完全に理解する","uri":"/junior-engineers-learning-journal/network-wireless-lan/"},{"categories":["OS"],"content":"Linuxのアクセス制御を完全に理解する。","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":" こんにちは、しぶやです。 今回はLinuxのアクセス制御を「完全に理解」していきたいと思います。 ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:0:0","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"TL;DR Linuxの権限管理の基本を復習 capabilityを利用することで最小権限の原則に従える SELinuxを利用すれば、権限分掌が可能 ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:1:0","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"0　はじめに Linuxに限った話ではないですが、ファイルについて理解することは非常に重要だと思います。 というのも、以下のような有名な考え方があります。 Linuxでは全てをファイルとして扱うようになっています。by LPI-JAPAN 僕がLinuxを好きである一番の理由です。 Linuxがかっこ良いからというわけではなく、すべてをファイルとして扱ってくれるLinuxは理解しやすいのです。 Windows等は複雑すぎて僕にはまだ理解できない部分がほとんどです。(いずれ勉強したい。。) 話を戻して、本記事ではLinuxにおけるアクセス制御、すなわちファイルのアクセス制御について「完全に理解」していきたいと思います。 「少し分かる」レベルの人は軽く読み飛ばしてください。 ※ 本記事では以下の環境で動作検証をしています。 OS：Ubuntu 24.04.1 LTS ルートファイルシステム：ext4 ホスト：AWS EC2 ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:2:0","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"1　Linuxにおけるアクセス制御の基本 まずは、基本の復習からです。 ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:3:0","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"1.1　基本のパーミッション Linuxにおけるファイルパーミッションは以下のような形をしています。 drwxrwxrwx これは、以下の4つに分けられます。 d + rwx + rwx + rwx (= drwxrwxrwx) d——— ファイルの種類を表す。 - … ファイル l … リンク d … ディレクトリ etc. -rwx—— 所有ユーザの権限を表す。 - … 権限なし r … 読み込み権限 w … 書き込み権限 x … 実行権限 —-rwx— 所有グループの権限を表す。 読み方は所有ユーザと同様。 ——-rwx その他のユーザの権限を表す。 読み方は所有ユーザと同様。 それでは、実際のファイルを見てみましょう。 pingの権限 上記から、echoは管理者のみが書き換えも可能、他は読み込みと実行のみが可能です。 書き換えを行うとどうなるでしょうか？ 書き込みの権限エラーその1 権限がないと怒られました。 詳細に見てみましょう。システムコールを追ってみます。 書き込みの権限エラーその2 “openat(AT_FDCWD, “/usr/bin/ping”, O_WRONLY|O_CREAT|O_TRUNC, 0666) = -1 EACCES (Permission denied)” から、書き込み権限でファイルを開こうとしたときに権限エラーが出ていることが分かります。 ファイル実行の場合はどうでしょうか。 Linuxにおいて、基本的にはファイルの実行に読み込み権限が必要です。では、「実行権限は読み込み権限を包含しているのでしょうか？」 「読み込み権限なしに、実行権限だけを持つようなパターンはあるのでしょうか？」 これについては、次節で見ていきたいと思います。 ここでは、アクセス権限意外の部分を復習していきましょう。 （再掲）pingの権限 ファイルの主要な属性には以下のようなものがあります。 リンク数 所有者、所有グループ 最終更新日時 サイズ ファイル名 アクセス権限の横にある数字はリンク数です。 Windowsでいうショートカットに近いものです。 実際にリンクファイルを作成してみましょう。 リンクファイル ここでは、実際にpinglinkというリンクファイルを作成しています。 リンクファイルを作成したことにより、\"/usr/bin/ping\"のリンク数が2になっていることが分かります。 また、pinglink経由でpingが実行できていることが分かります。 ※ リンクファイルの作成に\"sudo\"が必要な理由は本記事を最後まで読むと分かるはずです。 シンボリックリンクとハードリンク Linuxのリンクにはシンボリックリンクとハードリンクがあります。 Windowsのショートカットに近いものはシンボリックリンクの方です。 シンボリックリンク ファイルやディレクトリへのパス情報 参照先が消えるとリンクが使えなくなる。 ハードリンク 元ファイルと同じinodeを指す → もとのファイルが消えても、ハードリンクからはデータにアクセス可能 → リンク先の変更は元ファイルにも影響 ※ inodeについては、2.2 VFSで詳しく話します。 chmod, chown 以下の2つはよく使うコマンドですね。 chmod ファイルのアクセス権限を変更する。 例：chmod ./hoge.txt 644 ※ “hoge.txt\"を所有者のみ読み込み書き込みok、所有グループ、その他のユーザは読み込みのみokに変更 chown ファイルの所有者を変更する。 例：chown hoge:ghoge ./hoge.txt ※ “hoge.txt\"の所有者を\"hoge\"に、所有グループを\"ghoge\"に変更 Tip chmodで存在しないユーザを指定したらどうなのでしょう。 ⇓ chmodのエラー “invalid user: hoge\"と怒られました。 どうやら\"systemd\"がpasswdとかを利用して管理しているuserdbでユーザのチェックを行っているようです。 ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:3:1","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"1.2　その他パーミッション その他のパーミッションについて見ていきます。 setuid, setgid setuid, setgidは実行時に所有者の権限で実行するためのものです。 passwdを例に見ていきましょう。 passwdの権限 setuidがセットされていると、ファイルの所有者の実行権限が\"s\"になります。 これにより、ファイル所有者の権限でファイルを実行でき、ファイル所有者がアクセスできる全てのファイルにアクセスできるようになります。 setuidがセットされているファイルを実行した場合、所有者の権限を得られることが分かりました。 しかし、自分自身が持つ権限はどうなるのでしょうか？ 言い換えると、これまでアクセスできていた自分のファイルにはアクセスできる状態を保ってくれるのでしょうか？ 実際に見てみましょう。 setuid ここでは、ユーザ\"hoge\"がもつ\"owned_by_hoge.txt\"とユーザ\"ubuntu\"がもつ\"owned_by_ubuntu.txt\"をそれぞれ600のパーミッションで用意しています。 また、“cat\"のバイナリを用意し、setuidを付与しています。 “cat\"経由でそれぞれのファイルを開いた際、“ubuntu\"が所有する\"owned_by_ubuntu.txt\"は開けなくなっていることが分かります。 つまり、setuidで他のユーザ権限で実行した際は、完全に権限が移行され、自分自身の権限はなくなるということです。 ※ この仕組みはシンプルで分かりやすいですね。 RUIDとEUID LinuxのプロセスはプロセスIDの他にRUIDとEUIDというものをもっています。 RUID … 実ユーザID EUID … 実効ユーザID setuidがセットされたファイルを実行した場合は、RUIDは実行ユーザのユーザID、EUIDは借りた権限の持ち主のユーザIDです。 EUIDがプロセスの実行ユーザとなり、その権限でプロセスが動きます。 RUIDとEUID setuidは便利な反面、脆弱性があると権限昇格に利用される恐れがあり非常に危険な存在です。 それでは、なぜsetuidを利用するのでしょうか？実行権限だけ付与すればよいのではないでしょうか？ この答えは、実行プロセスに管理者権限が必要だからです。以下がその例です。 passwd passwdは実行後、\"/etc/shadow\"や\"/etc/passwd\"の書き込みが発生します。 しかし、通常ユーザではこれらのファイルへの書き込み権限がありません。 そのため、setuidを行った\"passwd\"コマンドにより、passwdコマンド経由でroot権限を利用してそれらのファイルの書き換えができるようになります。 uid・gid uid, gidはユーザやグループのための一意の識別子です。 ユーザの情報は\"/etc/passwd\"に、グループの情報は\"/etc/group\"にあります。 /etc/passwd /etc/group 読み方としては、以下です。 /etc/passwd … ユーザー名:パスワード(※):UID:GID:コメント:ホームディレクトリ:ログインシェル /etc/group … グループ名:パスワード(※):GID:グループメンバー ユーザIDは1000以上が割り当てられます。rootは0です。 shadow 先程の\"/etc/passwd\"には実際のパスワードは入っていませんでした。 これは、\"/etc/passwd\"はすべてのユーザから読み込まれてしまうため、パスワードが他のユーザに漏洩してしまうからです。 実際のパスワードは\"/etc/passwd\"に保存されています。 /etc/shadow 読み方は以下です。 ユーザー名:暗号化パスワード:最終変更日:最小日数:最大日数:警告日数:無効日数:有効期限 スティッキービット スティッキービットはディレクトリに適用するものです。 スティッキービットが適用されたディレクトリはすべてのユーザーがファイルの作成・書き込み可能です。 スティッキービットの特徴はファイルの削除は所有者のみが可能ということです。 /tmpなどはステッキービットが適用されている例です。 実際にスティッキービットを試してみましょう。 /tmpのスティッキービット スティッキービットに作成されたファイルの権限は\"—t\"になります。 スティッキービットの効果 また、ファイル所有者以外のユーザはファイルの読み込み、書き込みは可能ですが、削除をしようとすると怒られます。 Tip そもそも、ファイルの削除権限とは何なのでしょうか？ 書き込み権限とは異なるのでしょうか？ ファイルの削除に必要な権限はファイルが置かれたディレクトリの書き込み権限と実行権限があるかです。 Tip スティッキービットはファイルの削除は不可能ですが、書き込みは可能です。 ここで、他のユーザにファイル内容をすべて削除されてしまうと、ファイルを削除されたような状態になります。 スティッキービットは一体何のためにあるのでしょうか？ 結論、スティッキービットは誤って他人のファイルを削除することを防止するためのものです。 ファイルの中身を書き換えられてしまうことに変わりはないので、それを防ぐには通常のアクセス権管理が必要です。 ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:3:2","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"1.4　sudo 1.3でsetuid, setgidを学んだところで、sudoも復習しておきましょう。 sudoは管理者権限でコマンドを実行するために利用されます。 sudoの管理を行っているのは\"/etc/sudoers\"です。実際に見てみましょう。 sudoers 読み方は以下です。 alice ALL=(ALL:ALL) ALL alice … 権限を与えるユーザー ALL … すべてのホストでコマンドを実行可能 (ALL:ALL) 1つ目の ALL … sudo 実行時に任意のユーザーに切り替え可能 2つ目の ALL … sudo 実行時に任意のグループに切り替え可能 ALL … すべてのコマンド実行可能 それでは、sudoを試してみましょう。 sudo 所有者??? Tip “/etc/sudoers\"を編集する際は、“visudo\"コマンドが推奨されています。 これには以下のような機能があるからのようです。 保存時に構文エラーのチェックを行う 同時編集を禁止する （\"/etc/sudoers\"自体の）パーミッションの自動保護 “/etc/sudoers\"の破壊防止（rootに戻れなくなることを防止） ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:3:3","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"1.5　コピー時の動作 1.1~1.3ででファイルのアクセス権限について復習しました。 では、ファイルをコピーした際はどのような挙動をするのでしょうか。 デフォルトのcpコマンドの動作は以下です。 コピー元の読み取り権限が必要 コピー元のアクセス権の設定をコピー 所有者、所有グループはコピーを行った人のものに変更 “-p\"オプションをつけると、アクセス権に加え、所有者やタイムスタンプなども完全にコピーされます。 copy リンクファイル作成時はどうでしょうか？ シンボリックリンク シンボリックリンク自体は独立したファイルとして扱われます。※ シンボリックリンクはただのパスのようなものであるため。 所有者はリンク作成者 パーミッションは\"lrwxrwxrwx” リンク先のファイルを操作する際にそちらに左右されるため、リンクファイル自体にパーミッションをもたせる必要がない。 ハードリンク 所有者、パーミッション等はコピー元ファイルと同じ link ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:3:4","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"2　Linuxにおけるアクセス制御の深堀 それではディープダイブしていきましょう。 そもそもLinuxカーネルくんは、どこでファイルのパミッションを管理し、ファイルアクセスをしているのでしょうか？ ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:4:0","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"2.1　ファイルシステム まずはファイルシステムです。wikiの定義を見てみましょう。 ファイルシステム（英: file system、filesystem）は、コンピュータのリソースを操作するための、オペレーティングシステム (OS) が持つ機能の一つ 定義の通り、ファイルシステムはOSの機能の一つとして、インストール時に選択できたら、複数のファイルシステムが組み込まれていたりします。 Linuxカーネルに組み込まれたファイルシステム LPI Japanではファイルシステについて、以下のように解説あります。 そもそもデータを扱うということはどういうことなのでしょうか。 通常OSを操作する上において、データを操作するということはファイルを操作することとほぼ同等の意味を持つかと思います。 このため通常はデータが物理的にどのように格納されているかを意識する必要もなく、逆に意識できない作りになっています。 これはOSの機能であるデータの抽象化によってもたらされる結果です。 実際に物理的な記憶装置に格納されているデータを素で扱おうとすると、 HDDのどこのセクタのどの部分とどの部分を取り出して、データをメモリ上に読み込み、メモリに格納できないものは後からまた読む・・・といった大変面倒なことをする必要があります。 現在のHDDの容量を考えてみると、何百ギガバイト（テラになりつつありますが・・・）という巨大なデータを格納できるような物体です。 その中に入っている何かのデータを自力で探しだし、利用することは人間が行う作業として成立しないものだともいえます。 このような物体に存在するデータを人間にわかりやすいファイルというものに抽象化、可視化し、データを永続的に管理しやすくするという役目を持つのがファイルシステムの基本的な考え方です。 一言でいうとファイルの管理をしてくれているようです。 詳細には、ファイルをどのように格納するかや、どのようにアクセスするかなど難しい話が色々あると思います。 具体的なファイルシステムを見ていきましょう。 Linux ext4 Linuxで最も利用されています。 ext3 ext4の前のやつです。 btreefs ファイルシステム自体にスナップショットやraidの機能があります。安定性については議論があるらしい。 xfs 大容量のファイルシステムむけに最適化されているらしい。 Windows NTFS 現在、Windowsでデフォルトで利用されているファイルシステムです。セキュリティであったり、ロギングであったり非常に高機能なイメージです。 FAT32 USBとかで使われていらやつです。ファイルサイズが4GBまでの制約があります。\\ exFat FAT32を改良したもので、大きなファイルもサポートしています。 MacOS APFS 現在のmacosで利用されているもの。 HFS APFSの前に利用されていたもの。 ファイルシステムごとにデータの格納方法だったり、管理方法が異なります。 ファイルシステムについては詳しくないですが、どこかで詳しく調べて記事にできたらと思います ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:4:1","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"2.2　VFS 2.1でファイルシステムにはいくつか選択肢があることがわかりました。なんなら人によっては自作している人もいます。 ここで、ファイルシステムを変えるたびにOSに大きな変更があっては困らないでしょうか？できるだけ疎結合を意識したくなります。ここで登場するのがVFSです。 VFSとは、Virtual File Systemの略です。 LPIJapanの説明を見てみましょう。 VFSは下位の物理的な媒体を抽象化し、データ、デバイスを含む全てのコンピュータリソースに対して統一的なファイルアクセスという入出力インターフェイスを提供します。 これによりリソースの差異を気にすることなく、様々な対象に対して統一のアクセスを行うことができます。 さらにVFSにはファイルシステムの抽象化という役割もあり、これによってことなる複数のファイルシステムに対して透過的にアクセスすることが可能になっており、ファイルシステムの種類を意識せずに利用することができます すなわち、カーネルとファイルシステムの間に入り、カーネルからのアクセスを抽象化し、ファイルシステムが異なってもカーネルに統一的なアクセスを提供します。 ファイルシステム以外にも、様々な入出力を抽象化し、統一的なアクセスを可能としてくれてます。 実際にVFSではどのように管理されているのでしょうか。 VFSにおいて、重要な役割を果たしているのが\"struct inode\"です。 “sturuct inode\"にはファイルの所有者やタイムスタンプなどオブジェクトの基本情報が格納されます。 実際に\"struct inode\"を見てみましょう。 /* * Keep mostly read-only and often accessed (especially for * the RCU path lookup and 'stat' data) fields at the beginning * of the 'struct inode' */ struct inode { umode_t i_mode; unsigned short i_opflags; kuid_t i_uid; kgid_t i_gid; unsigned int i_flags; #ifdef CONFIG_FS_POSIX_ACL struct posix_acl *i_acl; struct posix_acl *i_default_acl; #endif const struct inode_operations *i_op; struct super_block *i_sb; struct address_space *i_mapping; #ifdef CONFIG_SECURITY void *i_security; #endif /* Stat data, not accessed from path walking */ unsigned long i_ino; /* * Filesystems may only read i_nlink directly. They shall use the * following functions for modification: * * (set|clear|inc|drop)_nlink * inode_(inc|dec)_link_count */ union { const unsigned int i_nlink; unsigned int __i_nlink; }; dev_t i_rdev; loff_t i_size; time64_t i_atime_sec; time64_t i_mtime_sec; time64_t i_ctime_sec; u32 i_atime_nsec; u32 i_mtime_nsec; u32 i_ctime_nsec; u32 i_generation; spinlock_t i_lock; /* i_blocks, i_bytes, maybe i_size */ unsigned short i_bytes; u8 i_blkbits; enum rw_hint i_write_hint; blkcnt_t i_blocks; .....(省略)....... void *i_private; /* fs or device private pointer */ } __randomize_layout; include/linux/fs.h “i_mode\"はファイルの種類とパミッションを、“i_uid\"や\"i_gid\"はファイルの所有者などを表しています。 このように、VFSが提供する\"struct inode\"はオブジェクトに関する統一的な基本情報を保持しています。 ここで、ファイルシステムの関係についても説明したいと思います。 これまで、inodeのことを\"struct inode\"と呼んでいました。 これはinodeにはVFSがもつ\"struct inode\"とファイルシステムがもつinodeがあるからです。 ファイルシステムが持つinodeの方はデータブロックの位置情報やファイルシステム固有の情報などより詳細な情報を持っています。 実際にext4のファイルシステムを見てみましょう。 /* * Structure of an inode on the disk */ struct ext4_inode { __le16 i_mode; /* File mode */ __le16 i_uid; /* Low 16 bits of Owner Uid */ __le32 i_size_lo; /* Size in bytes */ __le32 i_atime; /* Access time */ __le32 i_ctime; /* Inode Change time */ __le32 i_mtime; /* Modification time */ __le32 i_dtime; /* Deletion Time */ __le16 i_gid; /* Low 16 bits of Group Id */ __le16 i_links_count; /* Links count */ __le32 i_blocks_lo; /* Blocks count */ __le32 i_flags; /* File flags */ union { struct { __le32 l_i_version; } linux1; struct { __u32 h_i_translator; } hurd1; struct { __u32 m_i_reserved1; } masix1; } osd1; /* OS dependent 1 */ __le32 i_block[EXT4_N_BLOCKS];/* Pointers to blocks */ __le32 i_generation; /* File version (for NFS) */ __le32 i_file_acl_lo; /* File ACL */ __le32 i_size_high; __le32 i_obso_faddr; /* Obsoleted fragment address */ ... （省略）... __le16 i_extra_isize; __le16 i_checksum_hi; /* crc32c(uuid+inum+inode) BE */ __le32 i_ctime_extra; /* extra Change time (nsec \u003c\u003c 2 | epoch) */ __le32 i_mtime_extra; /* extra Modification time(nsec \u003c\u003c 2 | epoch) */ __le32 i_atime_extra; /* extra Access time (nsec \u003c\u003c 2 | epoch) */ __le32 i_crtime; /* File Creation time */ __le32 i_crtime_extra; /* extra FileCreationtime (nsec \u003c\u003c 2 | epoch) */ __le32 i_version_hi; /* high 32 bits for 64-bit version */ __le32 i_projid; /* Project ID */ }; VFSがもつ\"struct inode\"とファイルシステムのinodeの関係としては、VFSの\"struct inode\"がファイルシステムのinodeから情報を取得する感じです。 これにより、カーネルくんはVFSの\"struct inode\"への統一的なアクセスが可能となります。 ここで、“struct inode\"はアクセス権限を\"imode\"として持っています。 ファイルへアクセスする際はこの\"imode\"の情報を利用し、マスクをかけることで権限のチェックを行っているのです！ 他にもスーパーブロックなど様々な話がありますが、ファイルシステムについての別記事で詳しく書こうと思います。 ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:4:2","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"2.3　カーネルの権限管理 1.2でsetuidの危険性について説明しました。 同時に、setuidの必要性についても説明しました。 最小権限の原則や権限分離を守りつつアクセス制御をしたいところですが、どうやってアクセス制御を行うのが良いのでしょうか？ 本説ではcapabilityについて説明します。 2.1, 2.2ではinodeについて説明しました。 inodeではimodeで権限情報を持っています。 ここで説明するcapabilityや3章で説明するaclは拡張領域を利用してより細かい権限管理を行います。 capabilitiesについてマニュアルでは以下のように書かれています。 For the purpose of performing permission checks, traditional UNIX implementations distinguish two categories of processes: privileged processes (whose effective user ID is 0, referred to as superuser or root), and unprivileged processes (whose effective UID is nonzero). Privileged processes bypass all kernel permission checks, while unprivileged processes are subject to full permission checking based on the process’s credentials (usually: effective UID, effective GID, and supplementary group list). Starting with Linux 2.2, Linux divides the privileges traditionally associated with superuser into distinct units, known as capabilities, which can be independently enabled and disabled. Capabilities are a per-thread attribute. capabilities(7) — Linux manual page capabilityは従来のルート権限を分割したものです。 ルート権限という強く広い権限を与えるではなく、capabilityによる一部の強い権限を与えることにより、最小権限の原則に従うことができます。 実際に例を見てみましょう。以下はubuntuにもともと入っている\"ping\"です。 pingの権限 特にsetuidが付与されているわけでもなく、一般ユーザとして実行できるように見えます。 実際に、pingは一般ユーザでも実行できると思います。 では、このコマンドを自分のものとしてコピーして実行してみましょう。 一般ユーザとして実行できているファイルなので、コピーができれば問題なく動作するはずです。 ソケットエラー エラーになりました。 ローソケットの操作が許可されていないと怒られており、“capability\"か\"setuid\"がないと言われています。 これは、“ping\"がローソケットを利用しており、その権限がないためエラーが出ているのです。 では、もともと入っていた\"ping\"を見てみましょう。 pingのcapability “cap_net_raw=ep\"とあり、ローソケットを利用するためのcapabilityが割り当てられていることが分かります。 ※ e=Effectve, p=Permitted を意味してます。 これにより、setuidを利用せずにローソケットの利用しており、pingに脆弱性があったとしても権限昇格などの危険性が緩和されます。 ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:5:0","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"3　その他のアクセス制御 ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:6:0","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"acl aclはこれまでの1章で復習した標準の権限管理より細かいアクセス制御を実現できます。 具体的には、「その他のユーザーが」ではなく、「誰が」を設定できます。 aclのインストール 標準ではaclが入っていなかったのでインスールしました。 実際に使ってみましょう。 aclの設定 “root_secret.txt\"にユーザ\"hoge\"だけ読み込みと書き込みができるように設定しました。 ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:6:1","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"SELinux Linuxのアクセス制御は、以下の2種類があります。 任意アクセス制御 強制アクセス制御 これまで紹介してきたものはすべて任意アクセス制御です。 “selinux\"は強制アクセス制御に分類されます。 SELinux (Security-Enhanced Linux) は、システムにアクセスできるユーザーを管理者がよりきめ細かく制御するための、Linux® システム向けセキュリティ・アーキテクチャです。もともとは、Linux Security Modules (LSM) を使用した Linux カーネルへの一連のパッチとして、アメリカ国家安全保障局 (NSA) によって開発されました。 SELinux (Security-Enhanced Linux) とは SELinuxもcapabilityやaclのように標準的な権限管理より細かい設定が可能です。 任意アクセス制御と最も異なる点は、「rootであっても、すべてを自由に操作できるとは限らない」ことです。 すなわち、rootという中央集権を排除し、権限分掌を行うことができます。 SELinuxについては、深く学びたいので別の記事で個別に深堀ることとします。 ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:6:2","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"4　ユースケース ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:7:0","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"ACL その他のユーザを細かく分ける。 グループとかたくさん作ってやると便利 ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:7:1","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"Capability Nginxとかを例にsudoとの差を示す 取られたときの影響範囲をどれだけ抑えられるか 実際は大変な話。ベストプラクティス集みたいなものをつくれれば ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:7:2","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"5　まとめ 今回はLinuxのアクセス制御について学習しました。 capabilityやSELinuxを利用することで、より細かい制御を行うことができ、最小権限の原則を実現できます。 実際のユースケースまで見えていない部分があるので、追って勉強しようと思います。 ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:8:0","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["OS"],"content":"参考 [1] [2] [3] ","date":"2025-03-20","objectID":"/junior-engineers-learning-journal/os-linux-access-controle/:9:0","tags":["OS"],"title":"Linuxのアクセス制御を完全に理解する","uri":"/junior-engineers-learning-journal/os-linux-access-controle/"},{"categories":["Virtualization"],"content":"Dockerを完全に理解する。","date":"2025-03-18","objectID":"/junior-engineers-learning-journal/virtualization-docker/","tags":["Virtualization"],"title":"Dockerを完全に理解する","uri":"/junior-engineers-learning-journal/virtualization-docker/"},{"categories":["Virtualization"],"content":"こんにちは、しぶやです。 学生時代の研究から始まり、社会人になってからも愛用しているDockerについて、気合をいれてまとめようと思います。 ","date":"2025-03-18","objectID":"/junior-engineers-learning-journal/virtualization-docker/:0:0","tags":["Virtualization"],"title":"Dockerを完全に理解する","uri":"/junior-engineers-learning-journal/virtualization-docker/"},{"categories":["Virtualization"],"content":"TL;DR ","date":"2025-03-18","objectID":"/junior-engineers-learning-journal/virtualization-docker/:1:0","tags":["Virtualization"],"title":"Dockerを完全に理解する","uri":"/junior-engineers-learning-journal/virtualization-docker/"},{"categories":["Virtualization"],"content":"1　コンテナ基礎 ","date":"2025-03-18","objectID":"/junior-engineers-learning-journal/virtualization-docker/:2:0","tags":["Virtualization"],"title":"Dockerを完全に理解する","uri":"/junior-engineers-learning-journal/virtualization-docker/"},{"categories":["Virtualization"],"content":"2　Docker ","date":"2025-03-18","objectID":"/junior-engineers-learning-journal/virtualization-docker/:3:0","tags":["Virtualization"],"title":"Dockerを完全に理解する","uri":"/junior-engineers-learning-journal/virtualization-docker/"},{"categories":["Virtualization"],"content":"2.1　","date":"2025-03-18","objectID":"/junior-engineers-learning-journal/virtualization-docker/:3:1","tags":["Virtualization"],"title":"Dockerを完全に理解する","uri":"/junior-engineers-learning-journal/virtualization-docker/"},{"categories":["Virtualization"],"content":"2.2　ClamAVのアーキテクチャ ","date":"2025-03-18","objectID":"/junior-engineers-learning-journal/virtualization-docker/:3:2","tags":["Virtualization"],"title":"Dockerを完全に理解する","uri":"/junior-engineers-learning-journal/virtualization-docker/"},{"categories":["Virtualization"],"content":"2.3　ClamAVのウイルススキャンの仕組み ","date":"2025-03-18","objectID":"/junior-engineers-learning-journal/virtualization-docker/:3:3","tags":["Virtualization"],"title":"Dockerを完全に理解する","uri":"/junior-engineers-learning-journal/virtualization-docker/"},{"categories":["Virtualization"],"content":"2.4　ClamAVのデータベース更新 ","date":"2025-03-18","objectID":"/junior-engineers-learning-journal/virtualization-docker/:3:4","tags":["Virtualization"],"title":"Dockerを完全に理解する","uri":"/junior-engineers-learning-journal/virtualization-docker/"},{"categories":["Virtualization"],"content":"2.5　ClamAVのソースコード ","date":"2025-03-18","objectID":"/junior-engineers-learning-journal/virtualization-docker/:3:5","tags":["Virtualization"],"title":"Dockerを完全に理解する","uri":"/junior-engineers-learning-journal/virtualization-docker/"},{"categories":["Virtualization"],"content":"3　検証 ","date":"2025-03-18","objectID":"/junior-engineers-learning-journal/virtualization-docker/:4:0","tags":["Virtualization"],"title":"Dockerを完全に理解する","uri":"/junior-engineers-learning-journal/virtualization-docker/"},{"categories":["Virtualization"],"content":"4　まとめ ","date":"2025-03-18","objectID":"/junior-engineers-learning-journal/virtualization-docker/:5:0","tags":["Virtualization"],"title":"Dockerを完全に理解する","uri":"/junior-engineers-learning-journal/virtualization-docker/"},{"categories":["Virtualization"],"content":"参考 [1] docker [2] コンテナセキュリティ　コンテナ化されたアプリケーションを保護する要素技術 ","date":"2025-03-18","objectID":"/junior-engineers-learning-journal/virtualization-docker/:6:0","tags":["Virtualization"],"title":"Dockerを完全に理解する","uri":"/junior-engineers-learning-journal/virtualization-docker/"},{"categories":["Database, Storage"],"content":"NASを完全に理解する。","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/database-storage-nas/","tags":["Database, Storage"],"title":"NASを完全に理解する","uri":"/junior-engineers-learning-journal/database-storage-nas/"},{"categories":["Database, Storage"],"content":"こんにちは、しぶやです。 最近、Synologyのnasを中古で安く仕入れたので、これを機にNASを「完全に理解」していきたいと思います。 ","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/database-storage-nas/:0:0","tags":["Database, Storage"],"title":"NASを完全に理解する","uri":"/junior-engineers-learning-journal/database-storage-nas/"},{"categories":["Database, Storage"],"content":"TL;DR NASはファイルサーバみたいなもの。 標準機能として、RAIDが組めたり、バックアップとれたり、いろいろできる。 NAS用ソフトが充実している。 ","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/database-storage-nas/:1:0","tags":["Database, Storage"],"title":"NASを完全に理解する","uri":"/junior-engineers-learning-journal/database-storage-nas/"},{"categories":["Database, Storage"],"content":"1　NASの基本 本章では、NASの基本について学んでいきます。 ","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/database-storage-nas/:2:0","tags":["Database, Storage"],"title":"NASを完全に理解する","uri":"/junior-engineers-learning-journal/database-storage-nas/"},{"categories":["Database, Storage"],"content":"1.1　NASとは NASとは、Network Attached Strorageの略です。その名の通り、ネットワークに接続して利用するストレージです。 代表的なNASメーカーには以下のようなものがあります。 Synology QNAP BUFFALO NETGEAR 何はともあれ、現物を見てイメージの具体化をしてみます。 Synology DiskStation DS223j 小型で静音の省エネ型ストレージ こちらは、家庭用でも利用されているNASです。Youtubeとかもよく見るサイズのものですね。 Synology DiskStation DS3622xs+ どんな環境にも適合する、パワフルで大容量のストレージ こちらは、より高性能な大容量ストレージです。いかつい見た目でかっこよいですね Synology FlashStation FS6400 I/O インテンシブなアプリケーション向けの超高速オールフラッシュサーバー ラックマウント用のNASもあるようです。 Synology Plusシリーズ3.5インチSATA HDD 家庭やスモールオフィス環境のSynologyシステム専用に作られた高信頼性ハードドライブ Synology Enterpriseシリーズ2.5インチSATA SSD SynologyのSSDを使用してストレージ インフラを最新化 NASには上記のようなHDDやSDDを差し込み利用します。nベイというのは、これらを差し込むスロットが何個あるかを表しています。 DAS vs NAS vs SAN NASと比較されるものとして、DASやSANがあります。 DAS：Direct Attached Storage ストレージを直接コンピュータに接続する方式です。容易なセットアップや低コストといった特徴があります。 NAS：Network Attached Storage 本記事で取り上げている通り、ネットワークを通じてアクセス可能なストレージです。ネットワーク経由で複数人で同時にアクセスできる特徴があります。 SAN：Storage Area Network 専用のネットワーク経由で複数のサーバと接続できるストレージです。 こちらについては、あまり詳しくわかっていませんが、データ転送が高速であったり、ブロックレベルでアクセス可能といった特徴があるようです。 ちなみに、どんなプロトコルで通信が行われているのかについてですが、iSCSI（IP over SCSI）やFibre Channel（FC）、Fibre Channel over Ethernet（FCoE）といったものが利用されているようです。 ","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/database-storage-nas/:2:1","tags":["Database, Storage"],"title":"NASを完全に理解する","uri":"/junior-engineers-learning-journal/database-storage-nas/"},{"categories":["Database, Storage"],"content":"1.2　NASの機能 それでは、NASの具体的な機能を見ていきます。 ファイル共有 ネットワーク経由でファイルの読み書きが可能です。スナップショットをとれたり、バージョン管理機能を持っていたりするものなどもあります。 「具体的に中で何が動いているのか」についてですが、NASはSMBやNFSなど複数のプロトコルをサポートしており、中身は一般的なOSSでファイルサーバのように動くようです。 アクセス管理 利用者視点ではもちろん機能ですね。ユーザごとに読み取り専用などアクセス権の管理が可能です。 RAID RAIDによるデータの冗長性を確保できます。もちろん複数ベイが必要になります。 復習：RAID RAIDはRedundant Arrays of Inexpensive Disksの略です。複数のディスクを組み合わせて冗長化するやつですね。 RAIDの主なレベルは以下です。 RAID 0 冗長化していない通常のモードです。 信頼性は失われますが、書き込む量も増えないため、高速でストレージの利用効率も高いです。 RAID 1 2台のディスクを利用したシンプルなミラーリングです。データを二重に保存します。 RAID 5 3台以上のディスクを利用し、データとそのパリティをそれぞれ分散させて保存します。 パリティを保存しているため、容量効率は高いですが、データの復旧には時間がかかってしまいます。 RAID 6 RAID5 + パリティです。RAID1やRIAD5と異なり、2台のディスクが壊れても復旧が可能です。 RAID 10 RAID 1 + RAID 0でRAID 10です。RAID 5/6よりも書き込みが高速で、耐障害性も高いです。 バックアップ バックアップにはPC等のクライアントのバックアップとNAS自身のデータのバックアップの2つ観点があります。 前者は専用のクライアントソフトなどを利用することで、手軽に頻度や対象を指定したバックアップを行えます。 後者は、Google DriveやAWSなど、クラウドストレージへNAS自身のデータをバックアップできます。 Tip NASは標準でRAID機能を持っているものが多いですが、これはあくまで冗長化です。 操作ミスによるNASデータの削除やランサムウェアによる被害が発生した際はデータを失ってしまいます。 これらの対策として別のストレージにバックアップを取ることが重要となり、NASは標準でクラウドストレージへのバップアップを行うことができます。 データの冗長化ではないですが、通信の冗長化としてLAGが組めるのも良い点ですね。 LANポートを複数持っているので、通信経路の冗長化にもなります。 リモートアクセスやVPN 専用ソフトを利用することで、インターネット経由で安全にアクセスできる機能を備えています。 インターネット経由で利用することも考えると当たり前に欲しい機能ですね。 VMやコンテナの実行 高性能のNASの場合は、VMやコンテナを中で動かせるようです。 独自のアプリケーションを中で動かすことで様々なことができるようになります。 セキュリティ NAS自身がファイアウォール機能などを持っていることもあります。 また、高性能なものは2段階認証を利用できたり、ウイルススキャン機能を持っていたりします。 Webサーバやメディアサーバ サーバ機能を持っているものもあるようです。 メンテナンス ファームウェアの自動アップデート機能を持っていたりします。 また、今回Synologyを使ってみてわかりましたが、オンラインからのヘルスチェックサービスなどもあるようです。 NASの性能 NASを買う前は、NASは高性能な高いやつほど読み書き速度が早いと安直に考えていました。 改めて考えてみると、読み書き速度はNASの性能ではなく、HDDやSDDの読み書き速度に依存することがわかります。 ※ 正確には、ネットワークの帯域幅であったり、RAIDの構成、CPUの性能などにも依存します。 ","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/database-storage-nas/:2:2","tags":["Database, Storage"],"title":"NASを完全に理解する","uri":"/junior-engineers-learning-journal/database-storage-nas/"},{"categories":["Database, Storage"],"content":"1.3　NASのメリット・デメリット NASのメリットは何と言っても1.2であげたものが手軽に利用できることです。 外付けHDDだけでは、複数人でデータを共有することはできないですし、ネットワーク経由でデータにアクセスすることもできません。 一方でNASのデメリットは、初期費用が高いことです。高機能なものにもなると、HDD抜きでNAS自身が非常に高いです。 所感 上記で太字で記載しましたが、NASの本質は標準で様々な機能が入っており、手軽に導入できることかと思います。 NAS自身のOSは専用の組み込みOSであることが多いようですが、その気になればPC1台とRAIDに必要な外付けHDDがあれば1.2で上げた機能をすべて実現できると思います。 これらの導入コストを低くできることがNASのメリットだと考えています。※ 静音だとか性能だとかって話はあると思いますが。 ","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/database-storage-nas/:2:3","tags":["Database, Storage"],"title":"NASを完全に理解する","uri":"/junior-engineers-learning-journal/database-storage-nas/"},{"categories":["Database, Storage"],"content":"1.4　外付けストレージ・ファイルサーバとの違い 比較表を書こうと思いましたが、1.3で述べたように、以下のような関係で表すことが適切かと思いました。 外付けHDD ⊂ ファイルサーバ ⊂ NAS 外付けHDDもRAIDが組めるものがありますし、複数台で自分で組むこともできるでしょう。 また、外付けHDDをマウントし、ファイルサーバを建てることもできれば、フアイルサーバに機能を加えNASっぽく運用することもできるでしょう。 これらのことから、それぞれの境界はやや曖昧で、包含関係がしっくりきました。 ","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/database-storage-nas/:2:4","tags":["Database, Storage"],"title":"NASを完全に理解する","uri":"/junior-engineers-learning-journal/database-storage-nas/"},{"categories":["Database, Storage"],"content":"1.5　ユースケース ファイルサーバ 家庭用、企業用問わずファイルサーバとしてデータ共有に利用されています。 バックアップ バックアップの保存用途でNASが利用されています。 その他 メディアサーバ等様々な用途で利用されています。IoTの発展に伴い、カメラデータの保存等にも使われているようです。 Tip NASというよりHDDの話です。 よく壊れやすいと言われているHDDについてですが、動かし続けていないとより壊れやすいようです。 具体的な理由はChatGPTが以下のように教えてくれました。 ヘッドの位置ずれ 潤滑油の劣化 温度管理の不良 結露の問題 機械部品の劣化 家とかも誰も住んでいないとすぐだめになったりしますよね ","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/database-storage-nas/:2:5","tags":["Database, Storage"],"title":"NASを完全に理解する","uri":"/junior-engineers-learning-journal/database-storage-nas/"},{"categories":["Database, Storage"],"content":"2　Synologyを触る 今回はSynology DS120jを中古で安く仕入れたので、こちらを触ります。 1ベイモデルとなっており、RAIDを組めないのが残念ですが、用途としては自宅鯖のバックアップようなのでよいでしょう。 製品名：Synology DS120j バージョン：DSM 7.2.2 HDD容量：2TB OSは初期セットアップ時にダウンロードしました。HDDは別で買うのが面倒だったので、HDD付きを買いました。 Synology DS120j ","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/database-storage-nas/:3:0","tags":["Database, Storage"],"title":"NASを完全に理解する","uri":"/junior-engineers-learning-journal/database-storage-nas/"},{"categories":["Database, Storage"],"content":"2.1　解体 解体（物理）です。 NAS 解体ショー 思っていたより大きめの基盤が張り付いていました。この辺も最低でも登場人物と役割がわかる程度にはなりたいですが、今は電源やファンの接続部分くらいしか分からないです。 近いうちに勉強する予定があるので別記事に書くとして今回はスルーします。 HDD 表 HDD 裏 NAS用のHDDです。やはりHDDは重いですね。 裏面を見るとよりディスクとヘッドの存在が透けてきてテンションが上がりました。 真ん中にピング色の何かがついていますが、これは何なのでしょう。接着剤？ HDDも解体して中身のディスクとか見たかったですが、使う前に壊してしまうのが怖くなりやめました。壊れたらやってみよう。 ","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/database-storage-nas/:3:1","tags":["Database, Storage"],"title":"NASを完全に理解する","uri":"/junior-engineers-learning-journal/database-storage-nas/"},{"categories":["Database, Storage"],"content":"2.2　初期設定 物理を見たところで、いよいよNASを動かしてみます・ 起動時画面 ファームウェアの選択 ファームウェアのインストール 起動するとすぐにファームウェアを要求されました。 公式からダウンロードし、NASへインストールしていきます。\\ Synologyの組み込みOSは**DSM（Disk Station Manager）**というもので.patという拡張子が利用されているようです。 HDDのファームウェア DSMのダウンロード時にSynology HDD/SSD オフラインアップデータという項目を見つけ、.saという拡張子のファイルが存在することを見つけました。 これまで意識したことがなかったですが、HDDもRAMやROMを持っており、ファームウェアが動作しているようです。SynologyはDSMからHDDのファームウェアの管理ができるのだとか。 参考：【技術顧問の小話 ＃004】HDDのファームウェアとは？ アカウント設定 続きまして、ユーザの設定です。一般的なOSをインストールしたときと同じような流れですね。 ファームウェアの自動更新設定 追加機能 NASっぽい設定が始まりました。 左の画像では、1.2 NASの機能でも記載したように、ファームウェアの自動更新ができるようです。選択肢配下。 重要なDSMとパッケージのアップデートのみを自動で行う。（推奨） DSMとパッケージのアップデートを自動で行う。 DSMとパッケージのアップデートの通知のみを行い、手動でアップデートを行う。 右の画像では、Synologyのアカウントを作成することでオンラインで追加の機能を提供してくれるようです。以下、詳細です。 Secure Signin Service 具体的には以下の方法でサインインができるみたいです。 2要素認証 専用アプリにOTPを発行可能。 ハードウェアセキュリティキーによる認証 USB キー、Windows Hello、または Mac Touch IDで認証可能 Access your Synology NAS from anywhere インターネットからアクセスできるようにするものです。 仕組みとしては、NAS → Synology中継サーバ、クライアント → Synology中継サーバで接続を行うことで、安全にアクセスできるようにするというものです。 家にインバウンド通信を許可する必要もないことやSynologyが境界を固めてくれていることを考えると非常に便利で安全ですね。中継サーバが乗っ取られていない前提ですが。 Around-the-clock monitoring and protection Synology側のサーバからNASのヘルスチェックだったり、トラブルシュートの提供だったりを行ってくれるらしい。 ","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/database-storage-nas/:3:2","tags":["Database, Storage"],"title":"NASを完全に理解する","uri":"/junior-engineers-learning-journal/database-storage-nas/"},{"categories":["Database, Storage"],"content":"2.2　検証 Synologyの画面 Synologyの画面です。ブラウザで動くアプリケーションがあるという認識はありましたが、デスクトップlikeなアプリケーションなんですね。 なぜデスクトップlikeにしているのでしょうか。 VM動かしたりとかPCっぽい機能をたくさん利用することを考えるとユーザーフレンドリーなのでしょうか。 共有フォルダ アクセス権 試しに共有フォルダを作成してみました。 LocationにVolume 1: ext4とあることから、裏ではボリューム作ってフォーマットしてファイルシステム作成している感じですかね。 物理ボリューム → ボリュームグループ → 論理ボリューム → ファイルシステムみたいなコマンドベースの手順を踏まずにポチポチで完結するのはらくで良いですね。 アクセス権についてもGUIで簡単に設定できます。 豊富なアプリケーション アプリもかなり豊富な種類がありました。 消費電力 Synology DS120jで消費電力を測ってみました。 通常時の消費電力 書き込み時の消費電力 高いのか低いのか勘所がないです。。 アイドル時：4.68W、負荷時：9.81Wと紹介しているサイトがありました。アイドル状態とやらになったらもう少し消費電力を抑えられたのかもしれません。 ","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/database-storage-nas/:3:3","tags":["Database, Storage"],"title":"NASを完全に理解する","uri":"/junior-engineers-learning-journal/database-storage-nas/"},{"categories":["Database, Storage"],"content":"3　まとめ 記事の途中でも書きましたが、NASの本質は標準で様々な機能が入っており、手軽に導入できるファイルサーバだと思っています。 以上を踏まえ、以下にまとめます。 NASはファイルサーバみたいなもの。 標準機能として、RAIDが組めたり、バックアップとれたり、いろいろできる。 NAS用ソフトが充実している。 ","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/database-storage-nas/:4:0","tags":["Database, Storage"],"title":"NASを完全に理解する","uri":"/junior-engineers-learning-journal/database-storage-nas/"},{"categories":["Database, Storage"],"content":"参考 [1] Synology [2] NAS入門: 初心者でもわかるデータ保存・共有・バックアップの極意 [3] 【技術顧問の小話 ＃004】HDDのファームウェアとは？ [4] SynologyNASの外部アクセスQuickConnectの仕組みと設定方法 ","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/database-storage-nas/:5:0","tags":["Database, Storage"],"title":"NASを完全に理解する","uri":"/junior-engineers-learning-journal/database-storage-nas/"},{"categories":["Others"],"content":"Idea Logs","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/others-idea-log/","tags":["Others"],"title":"執筆検討メモ","uri":"/junior-engineers-learning-journal/others-idea-log/"},{"categories":["Others"],"content":"以下、今後執筆を検討しているものたちです。  OS パッケージマネージャ  Network OSPF RIP STP  Security 堅牢化 ClamAV Suricata  Database, Storage NAS Postgres OracleDB  Data Science 古典学習  Cloud AWSサービス  Virtualization Proxmox K8s Docker  Hardware メモリ  System Design, Deployment, and Management ガイドライン フレームワーク  Finace お金の流れ  Basic Theory 物理  Others 1年目の感想 メモ 基礎 サイバーセキュリティと情報セキュリティ：済 物理的セキュリティと論理的セキュリティ：済 CIA：済 付加的な特性：済 NDA 制度/フレームワーク/ガイドライン ISMS 27000シリーズ 27001 27002 27017 27018 クラウドセキュリティ認証 JIS Q 27017 20000 15001 27014 ISMAP ismap liu SP800-53を参照 防衛産業サイバーセキュリティ基準 能動的サイバー防御 ISMS適合性評価制度 範囲はISMS適用範囲定義書 ISMSクラウドセキュリティ認証 AI事業者ガイドライン NIST ZTA ZTNA SDPコントローラ SOC保証制度 SIM3 cmmc cmmi samm NIST SP 800-40 金融庁 財務報告に関わる内部統制の評価及び監査に関する実施基準 金融庁 サイバーセキュリティ対策のための統一基準群 SCAP SOAR サイバーキルチェーン 偵察 武器化 MITER NIST サイバーセキュリティフレームワーク コンピュータセキュリティインシデントガイド 証拠保全のやつ STIX サイバー攻撃活動 攻撃者 攻撃手口 検知指標 観測事象 インシデント 対処措置 攻撃対象 内部不正ガイドライン 電子商取引及び情報財取引等に関する準則 JIPDEC JCMVP ウィーケストリンクモデル ドベネックの桶 ISO/IEC 15408 セキュリティソリューション CASB sase SD-WAN SWG FWAAS ZTNA RBI CASB CSPM DLP UEBA CAASM NIST SP800 207 拡張ゼロトラスト 非機能 キャパシティ管理 開発手法 ウォークスルー トップダウン ボトムアップ サンドイッチ 並行シミュレーション アジャイル ウォーターフォール テスト駆動開発 DEVOPS カオスエンジニアリング XP 適応型ソフトウェア開発 フィーチャ駆動型開発 ソフトウェア品質 形式手法 インスペクション ホワイトボックス ブラックボックス サイドチャネル攻撃 タイミング攻撃 故障利用攻撃 電力解析攻撃 破壊攻撃 AIへの攻撃 IoT タイポスワっティング ホモグラフ攻撃 好き民具 電磁シールド ステガノグラフィ テンペスト攻撃 wi-peep Webセキュリティ 攻撃 SQLインジェクション クロスサイトスクリプティング クロスサイトリクエストフォージェリ HTTPヘッダインジョクション メールヘッダインジェクション ディレクトリトラバーサル サーバーサイドリクエストフォージェリ OSコマンドインジェクション セッションハイジャック マンインサミドル Pass The Hash rat MITM トランザクション署名 モバイルコード 水飲み場攻撃 emotet monero LOTL ｸｲｯｼﾝｸﾞ 防御 CSRFトークン samesite属性 EV SSL見分け HSTS Keep-Alive キャッシュコントロール トランザクション認証 これって同じ秘密鍵的なものをサーバでも持っている感じ? X XSS Protection Client Security Policy Chache Controle: no chacheとか セッションフィくせーション cookie monster bug domain属性 url rewriting ドメインフロンティング 2.8.1 content ecurity policy traceメソッド クリックジャッキング, samesite x frame option PUA ゾーニング IRC 3-2-1ルール マルウェア検知手法 ノーウェアランサム ct, security.txt ACME, SCEP IRR RPKI ROA ROV rootでログインさせるとだれが使ったのか分からない。 IPHNEはMACアドレス地をランダム化させているらしい JC-STAR NPU インシデント対応 BCP BCM IRP コンティンジェンシープラン ディザスタリカバリ 自動車 自動車の情報セキュリティへの取り組みガイド misra c misra c++ obd2 CAN 車載イーサネット SOM/IP DOIP 無線LANセキュリティ WPA3 WPA2 Enteprise, Personal Enhanced Open EAP MD5 TLS TTLS TOPTP PEAP ジャミング攻撃 隠れ端末問題:https://xtech.nikkei.com/atcl/nxt/column/18/00247/041000003/ 他のキャリアを見つけられない そもそものCSMA/CAは wpa2とwpa3の違い wifi dpp sae iphoneのMACアドレスランダム化 OpenRoaming eduroam セキュリティ団体 CRYPTOREC NICT ダイダロス NOTICE 総合テストベッド IPA NISC JCSIP JPCERT/CC FIRST 経済産業省 セプターカウンシル DoS synflood http post flood ボットネット optimisticack, duplicate ack, partial ack: firewallとかの送信順序をどうこうするやつ smurf攻撃 メールボム NMAP ステルススキャン BOF DEP return-to-libc アドレス空間ランダム化 PIE 整数オーバーフロー BOFの仕組み stack guard ssp カナリア automatic fotification ルートキット mtm arpスプーフィング tcp, udp, web, 認証 Cookie FAPI FAPI 2.0 HOK MTLS DPOP 脆弱性 CVSS 基本評価基準 現状評価基準 脅威 CVSS-〇〇 SSVC SOAP ","date":"2025-03-16","objectID":"/junior-engineers-learning-journal/others-idea-log/:0:0","tags":["Others"],"title":"執筆検討メモ","uri":"/junior-engineers-learning-journal/others-idea-log/"},{"categories":["Markdown"],"content":"This article shows the basic Markdown syntax and format.","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files. Note This article is a shameful copy of the great Grav original page. If you want to know about the extended Markdown syntax of LoveIt theme, please read extended Markdown syntax page. Let’s face it: Writing content for the Web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages. Markdown is a better way to write HTML, without all the complexities and ugliness that usually accompanies it. Some of the key benefits are: Markdown is simple to learn, with minimal extra characters, so it’s also quicker to write content. Less chance of errors when writing in Markdown. Produces valid XHTML output. Keeps the content and the visual display separate, so you cannot mess up the look of your site. Write in any text editor or Markdown application you like. Markdown is a joy to use! John Gruber, the author of Markdown, puts it like this: The overriding design goal for Markdown’s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters, the single biggest source of inspiration for Markdown’s syntax is the format of plain text email. – John Gruber Without further delay, let us go over the main elements of Markdown and what the resulting HTML looks like! Tip  Bookmark this page for easy future reference! ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:0:0","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"1 Headings Headings from h2 through h6 are constructed with a # for each level: ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading The HTML looks like this: \u003ch2\u003eh2 Heading\u003c/h2\u003e \u003ch3\u003eh3 Heading\u003c/h3\u003e \u003ch4\u003eh4 Heading\u003c/h4\u003e \u003ch5\u003eh5 Heading\u003c/h5\u003e \u003ch6\u003eh6 Heading\u003c/h6\u003e Heading IDs To add a custom heading ID, enclose the custom ID in curly braces on the same line as the heading: ### A Great Heading {#custom-id} The HTML looks like this: \u003ch3 id=\"custom-id\"\u003eA Great Heading\u003c/h3\u003e ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:1:0","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"2 Comments Comments should be HTML compatible. \u003c!-- This is a comment --\u003e Comment below should NOT be seen: ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:2:0","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"3 Horizontal Rules The HTML \u003chr\u003e element is for creating a “thematic break” between paragraph-level elements. In Markdown, you can create a \u003chr\u003e with any of the following: ___: three consecutive underscores ---: three consecutive dashes ***: three consecutive asterisks The rendered output looks like this: ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:3:0","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"4 Body Copy Body copy written as normal, plain text will be wrapped with \u003cp\u003e\u003c/p\u003e tags in the rendered HTML. So this body copy: Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. The HTML looks like this: \u003cp\u003eLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u003c/p\u003e A line break can be done with one blank line. ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:4:0","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"5 Inline HTML If you need a certain HTML tag (with a class) you can simply use HTML: Paragraph in Markdown. \u003cdiv class=\"class\"\u003e This is \u003cb\u003eHTML\u003c/b\u003e \u003c/div\u003e Paragraph in Markdown. ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:5:0","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"6 Emphasis ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:6:0","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"Bold For emphasizing a snippet of text with a heavier font-weight. The following snippet of text is rendered as bold text. **rendered as bold text** __rendered as bold text__ The HTML looks like this: \u003cstrong\u003erendered as bold text\u003c/strong\u003e ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:6:1","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"Italics For emphasizing a snippet of text with italics. The following snippet of text is rendered as italicized text. *rendered as italicized text* _rendered as italicized text_ The HTML looks like this: \u003cem\u003erendered as italicized text\u003c/em\u003e ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:6:2","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"Strikethrough In GFMGitHub flavored Markdown you can do strikethroughs. ~~Strike through this text.~~ The rendered output looks like this: Strike through this text. The HTML looks like this: \u003cdel\u003eStrike through this text.\u003c/del\u003e ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:6:3","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"Combination Bold, italics, and strikethrough can be used in combination. ***bold and italics*** ~~**strikethrough and bold**~~ ~~*strikethrough and italics*~~ ~~***bold, italics and strikethrough***~~ The rendered output looks like this: bold and italics strikethrough and bold strikethrough and italics bold, italics and strikethrough The HTML looks like this: \u003cem\u003e\u003cstrong\u003ebold and italics\u003c/strong\u003e\u003c/em\u003e \u003cdel\u003e\u003cstrong\u003estrikethrough and bold\u003c/strong\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003estrikethrough and italics\u003c/em\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e\u003cstrong\u003ebold, italics and strikethrough\u003c/strong\u003e\u003c/em\u003e\u003c/del\u003e ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:6:4","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"7 Blockquotes For quoting blocks of content from another source within your document. Add \u003e before any text you want to quote: \u003e **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. The rendered output looks like this: Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. The HTML looks like this: \u003cblockquote\u003e \u003cp\u003e \u003cstrong\u003eFusion Drive\u003c/strong\u003e combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. \u003c/p\u003e \u003c/blockquote\u003e Blockquotes can also be nested: \u003e Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u003e\u003e Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. The rendered output looks like this: Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:7:0","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"8 Lists ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:8:0","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"Unordered A list of items in which the order of the items does not explicitly matter. You may use any of the following symbols to denote bullets for each list item: * valid bullet - valid bullet + valid bullet For example: * Lorem ipsum dolor sit amet * Consectetur adipiscing elit * Integer molestie lorem at massa * Facilisis in pretium nisl aliquet * Nulla volutpat aliquam velit * Phasellus iaculis neque * Purus sodales ultricies * Vestibulum laoreet porttitor sem * Ac tristique libero volutpat at * Faucibus porta lacus fringilla vel * Aenean sit amet erat nunc * Eget porttitor lorem The rendered output looks like this: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem The HTML looks like this: \u003cul\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit \u003cul\u003e \u003cli\u003ePhasellus iaculis neque\u003c/li\u003e \u003cli\u003ePurus sodales ultricies\u003c/li\u003e \u003cli\u003eVestibulum laoreet porttitor sem\u003c/li\u003e \u003cli\u003eAc tristique libero volutpat at\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ul\u003e ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:8:1","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"Ordered A list of items in which the order of items does explicitly matter. 1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem The rendered output looks like this: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem The HTML looks like this: \u003col\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit\u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ol\u003e Tip If you just use 1. for each number, Markdown will automatically number each item. For example: 1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem The rendered output looks like this: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:8:2","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"Task Lists Task lists allow you to create a list of items with checkboxes. To create a task list, add dashes (-) and brackets with a space ([ ]) before task list items. To select a checkbox, add an x in between the brackets ([x]). - [x] Write the press release - [ ] Update the website - [ ] Contact the media The rendered output looks like this: Write the press release Update the website Contact the media ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:8:3","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"9 Code ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:9:0","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"Inline Code Wrap inline snippets of code with `. In this example, `\u003csection\u003e\u003c/section\u003e` should be wrapped as **code**. The rendered output looks like this: In this example, \u003csection\u003e\u003c/section\u003e should be wrapped as code. The HTML looks like this: \u003cp\u003e In this example, \u003ccode\u003e\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;\u003c/code\u003e should be wrapped with \u003cstrong\u003ecode\u003c/strong\u003e. \u003c/p\u003e ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:9:1","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"Indented Code Or indent several lines of code by at least four spaces, as in: // Some comments line 1 of code line 2 of code line 3 of code The rendered output looks like this: // Some comments line 1 of code line 2 of code line 3 of code The HTML looks like this: \u003cpre\u003e \u003ccode\u003e // Some comments line 1 of code line 2 of code line 3 of code \u003c/code\u003e \u003c/pre\u003e ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:9:2","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"Block Fenced Code Use “fences” ``` to block in multiple lines of code with a language attribute. ```markdown Sample text here... ``` The HTML looks like this: \u003cpre language-html\u003e \u003ccode\u003eSample text here...\u003c/code\u003e \u003c/pre\u003e ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:9:3","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"Syntax Highlighting GFMGitHub Flavored Markdown also supports syntax highlighting. To activate it, simply add the file extension of the language you want to use directly after the first code “fence”, ```js, and syntax highlighting will automatically be applied in the rendered HTML. For example, to apply syntax highlighting to JavaScript code: ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ``` The rendered output looks like this: grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; Note Syntax highlighting page in Hugo Docs introduces more about syntax highlighting, including highlight shortcode. ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:9:4","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"10 Tables Tables are created by adding pipes as dividers between each cell, and by adding a line of dashes (also separated by bars) beneath the header. Note that the pipes do not need to be vertically aligned. | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | The rendered output looks like this: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. The HTML looks like this: \u003ctable\u003e \u003cthead\u003e \u003ctr\u003e \u003cth\u003eOption\u003c/th\u003e \u003cth\u003eDescription\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003edata\u003c/td\u003e \u003ctd\u003epath to data files to supply the data that will be passed into templates.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eengine\u003c/td\u003e \u003ctd\u003eengine to be used for processing templates. Handlebars is the default.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eext\u003c/td\u003e \u003ctd\u003eextension to be used for dest files.\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e Right or center aligned text Adding a colon on the right side of the dashes below any heading will right align text for that column. Adding colons on both sides of the dashes below any heading will center align text for that column. | Option | Description | |:------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | The rendered output looks like this: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:10:0","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"11 Links ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:11:0","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"Basic Link \u003chttps://assemble.io\u003e \u003ccontact@revolunet.com\u003e [Assemble](https://assemble.io) The rendered output looks like this (hover over the link, there is no tooltip): https://assemble.io contact@revolunet.com Assemble The HTML looks like this: \u003ca href=\"https://assemble.io\"\u003ehttps://assemble.io\u003c/a\u003e \u003ca href=\"mailto:contact@revolunet.com\"\u003econtact@revolunet.com\u003c/a\u003e \u003ca href=\"https://assemble.io\"\u003eAssemble\u003c/a\u003e ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:11:1","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"Add a Title [Upstage](https://github.com/upstage/ \"Visit Upstage!\") The rendered output looks like this (hover over the link, there should be a tooltip): Upstage The HTML looks like this: \u003ca href=\"https://github.com/upstage/\" title=\"Visit Upstage!\"\u003eUpstage\u003c/a\u003e ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:11:2","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"Named Anchors Named anchors enable you to jump to the specified anchor point on the same page. For example, each of these chapters: ## Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) will jump to these sections: ## Chapter 1 \u003ca id=\"chapter-1\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 2 \u003ca id=\"chapter-2\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 3 \u003ca id=\"chapter-3\"\u003e\u003c/a\u003e Content for chapter one. Note The specific placement of the anchor tag seems to be arbitrary. They are placed inline here since it seems to be unobtrusive, and it works. ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:11:3","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"12 Footnotes Footnotes allow you to add notes and references without cluttering the body of the document. When you create a footnote, a superscript number with a link appears where you added the footnote reference. Readers can click the link to jump to the content of the footnote at the bottom of the page. To create a footnote reference, add a caret and an identifier inside brackets ([^1]). Identifiers can be numbers or words, but they can’t contain spaces or tabs. Identifiers only correlate the footnote reference with the footnote itself — in the output, footnotes are numbered sequentially. Add the footnote using another caret and number inside brackets with a colon and text ([^1]: My footnote.). You don’t have to put footnotes at the end of the document. You can put them anywhere except inside other elements like lists, block quotes, and tables. This is a digital footnote[^1]. This is a footnote with \"label\"[^label] [^1]: This is a digital footnote [^label]: This is a footnote with \"label\" This is a digital footnote1. This is a footnote with “label”2 ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:12:0","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":["Markdown"],"content":"13 Images Images have a similar syntax to links but include a preceding exclamation point. ![Minion](https://octodex.github.com/images/minion.png) or: ![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") The Stormtroopocat Like links, images also have a footnote style syntax: ![Alt text][id] The Dojocat With a reference later in the document defining the URL location: [id]: https://octodex.github.com/images/dojocat.jpg \"The Dojocat\" Tip LoveIt theme has special shortcode for image, which provides more features. This is a digital footnote ↩︎ This is a footnote with “label” ↩︎ ","date":"2019-12-01","objectID":"/junior-engineers-learning-journal/others-basic-markdown-syntax/:13:0","tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/junior-engineers-learning-journal/others-basic-markdown-syntax/"},{"categories":null,"content":"About","date":"2025-01-01","objectID":"/junior-engineers-learning-journal/about/","tags":null,"title":"About","uri":"/junior-engineers-learning-journal/about/"},{"categories":null,"content":"このブログについて ","date":"2025-01-01","objectID":"/junior-engineers-learning-journal/about/:1:0","tags":null,"title":"About","uri":"/junior-engineers-learning-journal/about/"},{"categories":null,"content":"目的 学んだ内容をアウトプットすることによる学習効率の向上 外部に公開することによるモチベーションの向上 自己満足 ","date":"2025-01-01","objectID":"/junior-engineers-learning-journal/about/:1:1","tags":null,"title":"About","uri":"/junior-engineers-learning-journal/about/"},{"categories":null,"content":"主な内容 以下のようなカテゴリで、日々の学んだ内容や所感をまとめています。  OS  Network  Security  Database, Storage  Data Science  Cloud  Virtualization  Hardware  System Design, Deployment, and Management  Finace  Basic Theory  Others ","date":"2025-01-01","objectID":"/junior-engineers-learning-journal/about/:1:2","tags":null,"title":"About","uri":"/junior-engineers-learning-journal/about/"},{"categories":null,"content":"基本情報  執筆開始：2025年3月  著者：しぶや ","date":"2025-01-01","objectID":"/junior-engineers-learning-journal/about/:1:3","tags":null,"title":"About","uri":"/junior-engineers-learning-journal/about/"},{"categories":null,"content":"著者 ","date":"2025-01-01","objectID":"/junior-engineers-learning-journal/about/:2:0","tags":null,"title":"About","uri":"/junior-engineers-learning-journal/about/"},{"categories":null,"content":"自己紹介 初めまして、しぶやです。某大手SIerでセキュリティやってます。 名前：しぶや 職種：SIer 分野：金融 部署：セキュリティ技術支援 得意分野：迷走中.. 趣味：自宅鯖いじり / 技術検証 / 配信視聴（ゲームとか技術系とか） ","date":"2025-01-01","objectID":"/junior-engineers-learning-journal/about/:2:1","tags":null,"title":"About","uri":"/junior-engineers-learning-journal/about/"},{"categories":null,"content":"経歴 2024年4月：国立大学 大学院 情報系 卒業 2025年4月~現在: 某大手SIer 金融分野 セキュリティチーム 某大規模金融システムのネットワーク設計? ","date":"2025-01-01","objectID":"/junior-engineers-learning-journal/about/:2:2","tags":null,"title":"About","uri":"/junior-engineers-learning-journal/about/"},{"categories":null,"content":"資格・実績  IPA 基本情報技術者試験  Linuc 101, 102 201, 202 303  AWS AWS Certified Cloud Practitioner AWS Certified AI Practitioner AWS Certified Solutions Architect Associate  Azure Microsoft Certified Azure Fundamentals Microsoft Certified Azure Administrator Associate Microsoft Certified Azure Solutions Architect Expert  GCP Google Cloud Certified Cloud Digital Leader Google Cloud Certified Associate Cloud Engineer Google Cloud Certified Professional Cloud Architect  Other Microsoft PowerPoint (Microsoft 365 Apps) Microsoft Word Expert (Microsoft 365 Apps) 金融IT検定 ","date":"2025-01-01","objectID":"/junior-engineers-learning-journal/about/:2:3","tags":null,"title":"About","uri":"/junior-engineers-learning-journal/about/"},{"categories":null,"content":"参考 このブログは、静的サイトジェネレーターの Hugo と、シンプルで美しいテーマ LoveIt を使って構築しております。  LoveIt is a clean, elegant but advanced blog theme for Hugo developed by  Dillon. It is based on the original LeaveIt Theme and KeepIt Theme. Hugo Theme LoveIt ","date":"2025-01-01","objectID":"/junior-engineers-learning-journal/about/:3:0","tags":null,"title":"About","uri":"/junior-engineers-learning-journal/about/"}]